import { formatPrice, getIconForStation } from './utils.js';
import { currentLang, fuelLabels } from './language.js';
import { API_ENDPOINTS } from './config.js';

export let stationsData = [];
export let markerMap = [];

// üîß –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥—Å–≤–µ—Ç–∫–∏ (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∏–∑–≤–Ω–µ)
let highlightCallback = null;

export function setHighlightCallback(callback) {
    highlightCallback = callback;
}

export function loadStations(refreshUI) {
    if (stationsData.length > 0) {
        refreshUI();
        return;
    }

    fetch(API_ENDPOINTS.STATIONS)
        .then(res => res.json())
        .then(data => {
            stationsData = data;
            refreshUI();
        })
        .catch(err => console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", err));
}

export function generateMarkerMap() {
    markerMap = [];

    stationsData.forEach(station => {
        if (!station.petrol && !station.diesel && !station.gas) return;

        const marker = L.marker([station.latitude, station.longitude], {
            icon: getIconForStation(station.name)
        });

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º popup –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
        updateMarkerPopup(station, marker);

        markerMap.push({ station, marker });
    });

    // üÜï –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –ü–û–°–õ–ï —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å–µ—Ö –º–∞—Ä–∫–µ—Ä–æ–≤
    markerMap.forEach(({ station, marker }) => {
        marker.on('click', () => {
            console.log('Marker clicked:', station.name);
            if (highlightCallback) {
                highlightCallback(station, markerMap);
            }
        });
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ø–∞–ø–∞ –±–µ–∑ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ä–∫–µ—Ä–∞
function updateMarkerPopup(station, marker) {
    const fuels = [
        station.petrol ? `‚õΩ ${fuelLabels.petrol[currentLang]}: ${formatPrice("petrol", station.petrol)}` : null,
        station.diesel ? `üõ¢Ô∏è ${fuelLabels.diesel[currentLang]}: ${formatPrice("diesel", station.diesel)}` : null,
        station.gas ? `üî• ${fuelLabels.gas[currentLang]}: ${formatPrice("gas", station.gas)}` : null
    ].filter(Boolean).join("<br>");

    const popupHtml = `<b>${station.name}</b><br>${fuels}`;
    marker.bindPopup(popupHtml);
}

// üÜï –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ø–∞–ø–æ–≤ (–¥–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞)
export function updateAllMarkerPopups() {
    markerMap.forEach(({ station, marker }) => {
        updateMarkerPopup(station, marker);
    });
}