<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.14</version>
    <relativePath/>
  </parent>

  <groupId>md.fuel.ecosystem</groupId>
  <artifactId>ecosystem</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>
  <name>Application Ecosystem of Moldavian Filling Stations</name>
  <description>Application Ecosystem of Moldavian Filling Stations for working with real-time data.</description>

  <modules>
    <module>rest-api</module>
    <module>telegram-bot</module>
    <module>contract-generator</module>
    <module>report-aggregate</module>
  </modules>

  <properties>
    <java.version>11</java.version>
    <skip.unit.tests>false</skip.unit.tests>
    <skip.integration.tests>false</skip.integration.tests>

    <spring.boot.parent.version>2.7.14</spring.boot.parent.version>
    <proj4j.version>1.3.0</proj4j.version>
    <telegrambots.version>6.8.0</telegrambots.version>
    <mapstruct.version>1.5.5.Final</mapstruct.version>
    <javax.cache.version>1.1.1</javax.cache.version>
    <org.ehcache.version>3.10.8</org.ehcache.version>
    <lombok.mapstruct.binding.version>0.2.0</lombok.mapstruct.binding.version>
    <mockito.inline.version>4.5.1</mockito.inline.version>
    <wiremock.version>2.35.0</wiremock.version>
    <h2.version>2.2.220</h2.version>
    <postgresql.version>42.6.0</postgresql.version>
    <maven.failsafe.plugin.version>3.1.2</maven.failsafe.plugin.version>
    <build.helper.maven.plugin.version>3.4.0</build.helper.maven.plugin.version>
    <dependency.check.maven.version>8.3.1</dependency.check.maven.version>
    <jacoco.version>0.8.10</jacoco.version>
    <java.ngrok.version>2.1.0</java.ngrok.version>
    <maven.checkstyle.plugin.version>3.3.0</maven.checkstyle.plugin.version>
    <springdoc.openapi.ui.version>1.7.0</springdoc.openapi.ui.version>
    <jackson.databind.nullable.version>0.2.6</jackson.databind.nullable.version>
    <openapi.generator.maven.plugin.version>6.6.0</openapi.generator.maven.plugin.version>
    <contract.generator.version>1.0.0</contract.generator.version>
  </properties>

  <repositories>
    <repository>
      <id>osgeo</id>
      <name>OSGeo Release Repository</name>
      <url>https://repo.osgeo.org/repository/release/</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <!--SPRING FRAMEWORK-->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter</artifactId>
        <version>${spring.boot.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring.boot.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-webflux</artifactId>
        <version>${spring.boot.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
        <version>${spring.boot.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-cache</artifactId>
        <version>${spring.boot.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-validation</artifactId>
        <version>${spring.boot.parent.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-ui</artifactId>
        <version>${springdoc.openapi.ui.version}</version>
      </dependency>
      <dependency>
        <groupId>org.telegram</groupId>
        <artifactId>telegrambots-spring-boot-starter</artifactId>
        <version>${telegrambots.version}</version>
      </dependency>

      <!--USEFUL TOOLS-->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.cache</groupId>
        <artifactId>cache-api</artifactId>
        <version>${javax.cache.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ehcache</groupId>
        <artifactId>ehcache</artifactId>
        <version>${org.ehcache.version}</version>
      </dependency>
      <dependency>
        <groupId>org.locationtech.proj4j</groupId>
        <artifactId>proj4j</artifactId>
        <version>${proj4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.locationtech.proj4j</groupId>
        <artifactId>proj4j-epsg</artifactId>
        <version>${proj4j.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.alexdlaird</groupId>
        <artifactId>java-ngrok</artifactId>
        <version>${java.ngrok.version}</version>
      </dependency>
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>${aspectj.version}</version>
      </dependency>
      <dependency>
        <groupId>org.openapitools</groupId>
        <artifactId>jackson-databind-nullable</artifactId>
        <version>${jackson.databind.nullable.version}</version>
      </dependency>
      <dependency>
        <groupId>md.fuel.contract</groupId>
        <artifactId>contract-generator</artifactId>
        <version>${contract.generator.version}</version>
      </dependency>

      <!--DATABASE-->
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2.version}</version>
        <scope>runtime</scope>
      </dependency>

      <!--TEST-->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>${mockito.inline.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.github.tomakehurst</groupId>
        <artifactId>wiremock-jre8-standalone</artifactId>
        <version>${wiremock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring.boot.parent.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${lombok.mapstruct.binding.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>before-unit-tests</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</destFile>
              <propertyName>surefire.jacoco.args</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>after-unit-tests</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
              <outputDirectory>
                ${project.reporting.outputDirectory}/jacoco-unit-tests-coverage-report
              </outputDirectory>
            </configuration>
          </execution>

          <execution>
            <id>before-integration-tests</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</destFile>
              <propertyName>failsafe.jacoco.args</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>after-integration-tests</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</dataFile>
              <outputDirectory>
                ${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report
              </outputDirectory>
            </configuration>
          </execution>

          <execution>
            <id>merger-unit-and-integration-reports</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}/jacoco-output/</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <destFile>${project.build.directory}/jacoco-output/merged.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>create-merged-report</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
              <outputDirectory>
                ${project.reporting.outputDirectory}/jacoco-merged-tests-coverage.exec
              </outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>${skip.unit.tests}</skipTests>
          <argLine>${surefire.jacoco.args}</argLine>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build.helper.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven.failsafe.plugin.version}</version>
        <configuration>
          <skipTests>${skip.integration.tests}</skipTests>
          <argLine>${failsafe.jacoco.args}</argLine>
          <includes>
            <include>**/*IT.java</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <id>integration-tests</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${dependency.check.maven.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven.checkstyle.plugin.version}</version>
        <configuration>
          <sourceDirectories>
            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
            <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
          </sourceDirectories>
          <configLocation>codestyle/maven-plugin-java-google-style.xml</configLocation>
          <cacheFile>${project.build.directory}/checkstyle/checkstyle-cachefile</cacheFile>
          <outputFile>${project.build.directory}/checkstyle/checkstyle-result.xml</outputFile>
          <outputDirectory>${project.build.directory}/checkstyle/ui</outputDirectory>
        </configuration>
        <executions>
          <execution>
            <id>checkstyle-check</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
          <execution>
            <id>generate-report</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>checkstyle</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
